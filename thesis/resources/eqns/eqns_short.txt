__pts_x_0 = array([__x for __x,__y in table_eff_fox_p])
__pts_x_1 = array([__x for __x,__y in table_eff_suff_c])
__pts_y_0 = array([__y for __x,__y in table_eff_fox_p])
__pts_y_1 = array([__y for __x,__y in table_eff_suff_c])
acteff=1.0 + ateff * at
acteng_bw=acteng_bw_b * ( 1.0 - 0.652218 * activ_time )
acteng_bw_at=acteng_bw * acteff
acteng_bw_b=0.0256755
activ_time=activ_time_data  if (read_from_data == 1.0) else (activ_time_param )
activ_time_data
activ_time_param=0.0
ateff=0.52
atf=( tc * ndmei - at ) / del_at
bm_b=0.04 * bw_b
bw=f + lean
bw_b=70000.0
c_b=400.0
c_init=400.0
cal_c=4.18
cal_f=9.44
cal_p=4.7
carb_term=eff_dg_cox + max( 0.0 , eff_ci_cox * ( c / (0.1 + c) )  )
carbohydrate_intake_data
cell_mass=ics + c + p + icw
cell_mass_b=1.0/fwcm * icw_b
ci_0=1500.0
ci_b=ci_0
ci_g  = ci_k / cal_c
ci_input=1500.0
ci_k=carbohydrate_intake_data  if (read_from_data == 1.0) else (ci_input )
ciw=fiew * ecw_b - ( hc * c_init + hp * p_init)
cox_a=cox_d / cal_c * eff_suff_c
cox_d=fc * see + gngf + gngp
cox_k=cox_a * cal_c
cox_s=fc_s * gap / cal_c
cox_s_k=cox_s * cal_c
d_ox_tee=0.0 if (ox - tee < 0.1) else (ox - tee )
dc=dc_b * c / c_b
dc_b=180.0
dci=ci_k - ci_b
degc_p=0.172727
del_at=7.0
depc_c=0.211111
depc_f=0.176744
depc_p=0.863636
df=df_mol_b * ndf * mass_tg
df_mol_b=0.16
dnl=ci_g * eff_c_dnl * cal_c
dnl_b=ci_0 * eff_c_dnl_b
dnl_i=dnl / cal_f
dnl_o=min( dnl / cal_c , c / time_step )
dnleff=0.8
dp=dp_b * p / p_b
dp_b=dp_mol_b * massaa
dp_mol_b=2.73
dpi=pi_k - pi_b
ec=-268.0
ecw=ecw_b
ecw_b=fw * fetw * bw_b
eff_act_pox=sa * exp( - log(sa) * nacteng_bw )
eff_c_dnl=nc ** hill_dnl / ( k_dnl ** hill_dnl + nc ** hill_dnl )
eff_c_dnl_b=1.0 / ( k_dnl ** hill_dnl + 1.0 )
eff_ci_cox=wci * ( 1.0 + sci * ndci )
eff_ci_df=1.0 + ( ( lipol_max - lipol_min )  * exp( -k_lip * ci_g * cal_c / ci_b )+ lipol_min - 1.0 )/ max( 1.0 , eff_obes_df )
eff_ci_gngp=0.506 * ndci
eff_dg_cox=wg * ndc
eff_fox_p = numpy.interp(fox_p / fox_d, __pts_x_0, __pts_y_0)
eff_obes_df=(f / f_b)**(2.0/3.0)
eff_pi_gngp=0.306 * ndpi
eff_pi_pox=wpi * ( 1.0 + spi * ndpi )
eff_suff_c = numpy.interp(suff_c, __pts_x_1, __pts_y_1)
exog_glycerol_per_kcal_fat_intake=mass_of_glycerol / ( cal_f * mass_tg )
f_b=bw_b - lean_b
f_init=5075.0
fat_intake_data
fat_term=max( 0.0 , wf * ndf)
fc=carb_term / z
fc_s=is_sufficient_carb * carb_term / y
fetw=3.0/8.0
ff=fat_term / z
ff_s=is_sufficient_fat * fat_term / y
fi_0=1000.0
fi_b=fi_0
fi_g=fi_k / cal_f
fi_input=1000.0
fi_k=fat_intake_data  if (read_from_data == 1.0) else (fi_input )
fiew=(1.0-fetw)/fetw
fox_a=fox_d / cal_f * eff_fox_p
fox_d=ff * see
fox_k=fox_a * cal_f
fox_p=f / time_step * cal_f
fox_s=ff_s * gap / cal_f
fox_s_k=fox_s * cal_f
fp=prot_term / z
fp_s=prot_term / y
fw=7.0/10.0
fwcm=7.0/10.0
gap=gap_c + gap_f
gap_c=cox_d - cox_a * cal_c
gap_f=fox_d - fox_a * cal_f
gngeff=0.8
gngf=gngf_end + gngf_ex
gngf_b=gngf_end_b + gngf_ex_b
gngf_end=gngf_end_b * ndf
gngf_end_b=df_mol_b * mass_of_glycerol * cal_c
gngf_ex=exog_glycerol_per_kcal_fat_intake * fi_k * cal_c
gngf_ex_b=exog_glycerol_per_kcal_fat_intake * fi_0 * cal_c
gngf_i=gngf / cal_c
gngf_o=min( gngf / cal_f , f / time_step )
gngp=max( 0.0 , gngp_b * ( np - eff_ci_gngp + eff_pi_gngp ) )
gngp_b=100.0
gngp_i=gngp / cal_c
gngp_o=max( 0.0 , gngp / cal_p)
hc=2.7
hill_dnl=4.0
hp=2.0
ics=3967.28
icw=hc * c + hp * p + ciw
icw_b=fiew * ecw_b
is_sufficient_carb=1.0 if (gap_c < 0.1 ) else (0.0 )
is_sufficient_fat=1.0  if (gap_f < 0.1 ) else (0.0 )
k_dnl=2.0
k_lip=log( ( lipol_max - lipol_min ) /( 1.0 - lipol_min ))
kc=( ci_0 - dnl_b ) / see_b
kf=( fi_0 + dnl_b - gngf_b ) / see_b
kp=( pi_0 - gngp_b ) / see_b
lean=bm_b + ecw + cell_mass
lean_b=bm_b + ecw_b + cell_mass_b
lipol_max=3.1
lipol_min=0.9
mass_ffa=( cal_f * mass_tg - cal_c * mass_of_glycerol ) / ( 3.0 * cal_f)
mass_of_glycerol=92.0
mass_tg=860.0
massaa=110.0
massb=1400.0
mbc=rmr_lean * ( cell_mass - massb ) + rmr_b_b * massb + rmr_f_b * f
mc=( 1.0 - dnleff ) * dnl + ( 1.0- gngeff ) * ( gngf + gngp )
mei=ci_k + fi_k + pi_k
mei_b=ci_b + fi_b +pi_b
molar_caloric_dens_glycerol=cal_c * mass_of_glycerol
molar_caloric_dens_tg=cal_f * mass_tg
mt=( degc_p + depc_p ) * dp +depc_f * df +depc_c * dc
nacteng_bw=acteng_bw / acteng_bw_b
nc=c / c_b
ndc=dc / dc_b
ndci=dci / ci_b
ndf=eff_ci_df * eff_obes_df
ndmei=( mei - mei_b ) / mei_b
ndp=dp / dp_b
ndpi=dpi / pi_b
np=p / p_b
ox=ox_p + ox_s
ox_p=cox_k + fox_k + pox_k
ox_s=cox_s_k + fox_s_k + pox_s_k
p_b=cell_mass_b - icw_b - ics - c_b
p_init=8757.0
pae=acteng_bw_at * bw
pi_0=500.0
pi_b=pi_0
pi_g  = pi_k / cal_p
pi_input=500.0
pi_k=protein_intake_data  if (read_from_data == 1.0) else (pi_input )
pox_a=pox_d / cal_p
pox_d=fp * see
pox_k=pox_a * cal_p
pox_s=fp_s * gap / cal_p
pox_s_k=pox_s * cal_p
prot_term=( ndp + max( 0.0, eff_pi_pox )  ) * eff_act_pox
protein_fraction_of_cell_mass=0.2
protein_intake_data
read_from_data=0.0
rmr=mbc + mt + mc + ec
rmr_b_b=0.24
rmr_f_b=0.0045
rmr_lean=rmr_lean_b * rmreff
rmr_lean_b=0.0239374
rmreff=1.0 + ( 1.0 - ateff ) * at
sa=4.0
sci=0.761188
see=tee - gngp - gngf
see_b=tee_b - gngp_b - gngf_b
spi=15.0253
suff_c=c * cal_c / cox_d
table_eff_fox_p = [(0.0,0.0),(0.4,0.4),(0.798165,0.627193),(1.30275,0.824561),(2.0,0.95),(3.0,1.0)]
table_eff_suff_c = [(0.0,0.0),(0.1,0.6),(0.2,0.85),(0.3,0.95),(0.4,1.0),(1.0,1.0)]
tc=0.8
tee=pae + rmr + tef
tee_b=mei_b
tef=tef_c * cal_c * ci_g + tef_f * fi_k + tef_p * cal_p * pi_g
tef_c=0.075
tef_f=0.025
tef_p=0.25
wci=3.31414
wf=(1.0 + wpi) * kf / kp
wg=kc / kp * ( 1.0 + wpi )- wci
wpi=0.1
y=prot_term + is_sufficient_carb * carb_term + is_sufficient_fat * fat_term
z=carb_term + fat_term +prot_term
z_check_0=1.0+wpi+wci+wg+wf
z_check_1=wf/kf